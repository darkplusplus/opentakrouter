@{
    ViewData["Title"] = "Map";
}
@section Styles {
<link rel="stylesheet" href="/lib/leaflet/leaflet.min.css" />
<style>
    #map { height: 90vh; }
</style>
}

<div class="text-center">
    <div id="map"></div>
</div>

@section Scripts {
<script src="lib/leaflet/leaflet.min.js"></script>
<script src="lib/milsymbol/dist/milsymbol.min.js"></script>
<script>
    var markers = {}
    var map = L.map('map').setView([30, -30], 3);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    function OnOpen () {
        console.log("connected!")
    }

    function OnMessage (msg) {
        var cot = $.parseXML(msg.data);

        var uid = $(cot).find("event").attr("uid");
        var type = $(cot).find("event").attr("type");
        var stale = new Date($(cot).find("event").attr("stale"));
        var coord = [
            $(cot).find("point").attr("lat"),
            $(cot).find("point").attr("lon")
        ];
        var callsign = $(cot).find("contact").attr("callsign") || $(cot).find("event").attr("uid");
        var popup = `<b><span>${callsign}</span></b>&nbsp${type}`;

        console.log({
            "uid": uid,
            "type": type,
            "stale": stale,
            "lat": coord[0],
            "lon": coord[1],
            "callsign": callsign,
            "popup": popup
        });

        var sidc = function (t) {
            var parts = t.toUpperCase().split('-');
            parts[0] = 'S';
            parts.splice(3, 0, "P")
            return parts.join("").padEnd(12, "-");
        }(type)

        var symbol = new ms.Symbol(sidc, {
        })
        symbol = symbol.setOptions({ size: 20 });

        var icon = L.icon({
            iconUrl: symbol.toDataURL(),
            iconAnchor: [symbol.getAnchor().x, symbol.getAnchor().y],
        });

        if (!markers[uid]) {
            markers[uid] = L.marker(coord, { icon: icon }).addTo(map).bindPopup(popup);
        } else {
            markers[uid].setLatLng(coord).setPopupContent(popup);
        }
    }

    function Connect() {
        var proto = window.location.protocol == "https:" ? "wss" : "ws";
        var wsEndpoint = `${proto}://${window.location.hostname}:@ViewData["ws-port"]`;
        var ws = new WebSocket(wsEndpoint);

        ws.onopen = OnOpen;
        ws.onmessage = OnMessage;
        ws.onclose = () => {
            ws = null;
            setTimeout(Connect, 3000);
        }
    }

    Connect();
</script>
}